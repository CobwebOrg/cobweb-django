# Generated by Django 2.1.1 on 2018-09-28 18:04

from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0011_auto_20180925_1227'),
    ]

    operations = [
        migrations.AddField(
            model_name='project',
            name='collecting_scope',
            field=models.TextField(help_text='\n    As applicable, describe the scope and approach that this project is\n    intended to take (such as collecting for defined time frame).\n    ', null=True),
        ),
        migrations.AlterField(
            model_name='project',
            name='administrators',
            field=models.ManyToManyField(help_text='\n    Enter names of registered Cobweb users who can edit and manage project\n    information. Names can include more than one word, separated by spaces and\n    ending with a hard return for entry. For projects with a restricted\n    nomination policy, administrators are automatically included among selected\n    users.\n    ', related_name='projects_administered', to=settings.AUTH_USER_MODEL, verbose_name='administrators'),
        ),
        migrations.AlterField(
            model_name='project',
            name='description',
            field=models.TextField(help_text='\n    Describe the intended content (such as a theme, topic, or event it is\n    intended to document) and goals of this project.\n    ', null=True),
        ),
        migrations.AlterField(
            model_name='project',
            name='nominator_blacklist',
            field=models.ManyToManyField(blank=True, help_text='PROJECT_NOMINATOR_BLACKLIST', related_name='projects_blacklisted', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='project',
            name='nominators',
            field=models.ManyToManyField(blank=True, help_text='PROJECT_NOMINATORS', related_name='projects_nominating', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='project',
            name='tags',
            field=models.ManyToManyField(blank=True, help_text='\n    Enter or choose brief descriptive terms. Descriptive terms can include more\n    than one word, separated by spaces and ending with a hard return for entry.\n    ', to='core.Tag'),
        ),
    ]
