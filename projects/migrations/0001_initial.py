# Generated by Django 2.0.5 on 2018-06-04 22:22

import cobweb.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('languages_plus', '0004_auto_20171214_0004'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Claim',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('deleted', models.BooleanField(default=False)),
                ('has_holding', models.BooleanField(default=False)),
                ('crawl_scope', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.CrawlScope')),
            ],
            bases=(cobweb.models.CobwebModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Nomination',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('deleted', models.BooleanField(default=False)),
                ('rationale', models.TextField(blank=True, null=True)),
                ('suggested_crawl_frequency', models.CharField(blank=True, choices=[('Hourly', 'Hourly'), ('Daily', 'Daily'), ('Weekly', 'Weekly'), ('Monthly', 'Monthly')], max_length=50, null=True)),
                ('suggested_crawl_end_date', models.DateTimeField(blank=True, null=True)),
                ('language', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='languages_plus.Language')),
                ('nominated_by', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
            bases=(cobweb.models.CobwebModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500, unique=True)),
                ('description', models.TextField(null=True)),
                ('nomination_policy', models.CharField(choices=[('Public', "Public: anyone can nominate, even if they're not logged in."), ('Cobweb Users', 'Cobweb Users: anyone with a Cobweb account can nominate.'), ('Restricted', 'Restricted: only selected users and organizations can nominate.')], default='Public', max_length=10)),
                ('status', models.CharField(choices=[('Open', 'Open for Nomination'), ('Deprecated', 'Deprecated (no further nominations recommended)'), ('Inactive', 'Inactive (closed to nomination)'), ('Deleted', 'Deleted')], default='Active', max_length=8)),
                ('administrators', models.ManyToManyField(related_name='projects_administered', to=settings.AUTH_USER_MODEL, verbose_name='administrators')),
                ('nominator_blacklist', models.ManyToManyField(blank=True, related_name='projects_blacklisted', to=settings.AUTH_USER_MODEL)),
                ('nominator_orgs', models.ManyToManyField(blank=True, related_name='projects_nominating', to='core.Organization')),
                ('nominators', models.ManyToManyField(blank=True, related_name='projects_nominating', to=settings.AUTH_USER_MODEL)),
                ('subject_headings', models.ManyToManyField(blank=True, to='core.SubjectHeading')),
                ('tags', models.ManyToManyField(blank=True, to='core.Tag')),
            ],
            bases=(cobweb.models.CobwebModelMixin, models.Model),
        ),
        migrations.AddField(
            model_name='nomination',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nominations', to='projects.Project'),
        ),
        migrations.AddField(
            model_name='nomination',
            name='resource',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='nominations', to='core.Resource'),
        ),
        migrations.AddField(
            model_name='nomination',
            name='subject_headings',
            field=models.ManyToManyField(blank=True, to='core.SubjectHeading'),
        ),
        migrations.AddField(
            model_name='nomination',
            name='tags',
            field=models.ManyToManyField(blank=True, to='core.Tag'),
        ),
    ]
