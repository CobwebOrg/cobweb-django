# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-08-31 02:19
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('agent_type', models.CharField(choices=[('a', 'Automated'), ('p', 'Person')], max_length=3, verbose_name='Type')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('deprecated', models.DateTimeField(blank=True, null=True, verbose_name='Date Deprecated')),
            ],
        ),
        migrations.CreateModel(
            name='AgentIdentifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_type', models.CharField(choices=[('ORC', 'ORCID'), ('RID', 'ResearcherID'), ('SCO', 'Scopus'), ('TWI', 'Twitter Handle'), ('OTH', 'Other')], max_length=3, verbose_name='Type')),
                ('value', models.CharField(max_length=200, verbose_name='Value')),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cobweb.Agent')),
            ],
        ),
        migrations.CreateModel(
            name='Claim',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Starting Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Ending Date')),
                ('max_links', models.IntegerField(blank=True, null=True, verbose_name='Maximum Links')),
                ('time_limit', models.DurationField(blank=True, null=True, verbose_name='Time Limit')),
                ('document_limit', models.IntegerField(blank=True, null=True, verbose_name='Document Limit')),
                ('data_limit', models.IntegerField(blank=True, null=True, verbose_name='Data Limit (GB)')),
                ('robot_exclusion_override', models.BooleanField(default=False, verbose_name='Override Robot Exclusion?')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('deprecated', models.DateTimeField(blank=True, null=True, verbose_name='Date Deprecated')),
                ('asserted_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cobweb.Agent')),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('deprecated', models.DateTimeField(blank=True, null=True, verbose_name='Date Deprecated')),
            ],
        ),
        migrations.CreateModel(
            name='Holding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('deprecated', models.DateTimeField(blank=True, null=True, verbose_name='Date Deprecated')),
                ('asserted_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cobweb.Agent')),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cobweb.Collection')),
            ],
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('address', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Address')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cobweb.Institution')),
            ],
        ),
        migrations.CreateModel(
            name='InstitutionIdentifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_type', models.CharField(choices=[('i', 'ISNI'), ('r', 'Ringgold'), ('o', 'Other')], max_length=3, verbose_name='Type')),
                ('value', models.CharField(max_length=200, verbose_name='Value')),
            ],
        ),
        migrations.CreateModel(
            name='InstitutionMD',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('sector', models.CharField(blank=True, choices=[('a', 'Academic'), ('c', 'Corporate'), ('g', 'Government'), ('n', 'Non-Profit'), ('o', 'Other')], max_length=1, null=True, verbose_name='Sector')),
                ('institution_type', models.CharField(blank=True, choices=[('arc', 'Archive'), ('dat', 'Datacenter'), ('dpt', 'Department'), ('div', 'Division'), ('lab', 'Laboratory'), ('lib', 'Library'), ('mus', 'Museum'), ('pro', 'Project'), ('oth', 'Other')], max_length=3, null=True, verbose_name='Type')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('deprecated', models.DateTimeField(blank=True, null=True, verbose_name='Date Deprecated')),
                ('asserted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cobweb.Agent')),
                ('describes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cobweb.Institution')),
            ],
        ),
        migrations.CreateModel(
            name='Nomination',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('deprecated', models.DateTimeField(blank=True, null=True, verbose_name='Date Deprecated')),
                ('nominated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cobweb.Agent')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('deprecated', models.DateTimeField(blank=True, null=True, verbose_name='Date Deprecated')),
                ('established_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cobweb.Agent')),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('root_url', models.URLField()),
                ('nominated_projects', models.ManyToManyField(related_name='nominated_resources', through='cobweb.Nomination', to='cobweb.Project')),
            ],
        ),
        migrations.AddField(
            model_name='nomination',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cobweb.Project'),
        ),
        migrations.AddField(
            model_name='nomination',
            name='resource',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cobweb.Resource'),
        ),
        migrations.AddField(
            model_name='institutionidentifier',
            name='institution',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cobweb.InstitutionMD'),
        ),
        migrations.AddField(
            model_name='holding',
            name='resource',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cobweb.Resource'),
        ),
        migrations.AddField(
            model_name='collection',
            name='institution',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cobweb.Institution'),
        ),
        migrations.AddField(
            model_name='claim',
            name='collection',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cobweb.Collection'),
        ),
        migrations.AddField(
            model_name='claim',
            name='resource',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cobweb.Resource'),
        ),
        migrations.AddField(
            model_name='agent',
            name='affiliation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cobweb.Institution'),
        ),
        migrations.AddField(
            model_name='agent',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='nomination',
            unique_together=set([('resource', 'project', 'nominated_by')]),
        ),
        migrations.AlterUniqueTogether(
            name='institutionmd',
            unique_together=set([('describes', 'asserted_by')]),
        ),
    ]
