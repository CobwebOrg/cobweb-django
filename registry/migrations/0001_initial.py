# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-07-25 20:54
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('deprecated', models.DateTimeField(blank=True, null=True, verbose_name='Date Deprecated')),
            ],
        ),
        migrations.CreateModel(
            name='Claim',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Starting Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Ending Date')),
                ('max_links', models.IntegerField(blank=True, null=True, verbose_name='Maximum Links')),
                ('time_limit', models.DurationField(blank=True, null=True, verbose_name='Time Limit')),
                ('document_limit', models.IntegerField(blank=True, null=True, verbose_name='Document Limit')),
                ('data_limit', models.IntegerField(blank=True, null=True, verbose_name='Data Limit (GB)')),
                ('robot_exclusion_override', models.BooleanField(default=False, verbose_name='Override Robot Exclusion?')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('deprecated', models.DateTimeField(blank=True, null=True, verbose_name='Date Deprecated')),
                ('asserted_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='registry.Agent')),
            ],
        ),
        migrations.CreateModel(
            name='Holding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('deprecated', models.DateTimeField(blank=True, null=True, verbose_name='Date Deprecated')),
                ('asserted_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='registry.Agent')),
            ],
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('address', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Address')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('deprecated', models.DateTimeField(blank=True, null=True, verbose_name='Date Deprecated')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='registry.Institution')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('deprecated', models.DateTimeField(blank=True, null=True, verbose_name='Date Deprecated')),
                ('established_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='registry.Agent')),
            ],
        ),
        migrations.CreateModel(
            name='Seed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('deprecated', models.DateTimeField(blank=True, null=True, verbose_name='Date Deprecated')),
                ('nominated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='registry.Agent')),
                ('project_set', models.ManyToManyField(to='registry.Project')),
            ],
        ),
        migrations.AddField(
            model_name='holding',
            name='institution',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registry.Institution'),
        ),
        migrations.AddField(
            model_name='holding',
            name='seed',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registry.Seed'),
        ),
        migrations.AddField(
            model_name='claim',
            name='institution',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registry.Institution'),
        ),
        migrations.AddField(
            model_name='claim',
            name='seed',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registry.Seed'),
        ),
        migrations.AddField(
            model_name='agent',
            name='affiliation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='registry.Institution'),
        ),
    ]
